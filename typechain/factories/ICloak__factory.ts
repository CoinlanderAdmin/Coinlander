/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ICloak, ICloakInterface } from "../ICloak";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "minDethscales",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "maxDethscales",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "seed",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "salt",
        type: "uint16",
      },
    ],
    name: "getDethscales",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "minNoiseBits",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "maxNoiseBits",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "_dethscales",
        type: "uint16",
      },
    ],
    name: "getFullCloak",
    outputs: [
      {
        internalType: "uint32[32]",
        name: "",
        type: "uint32[32]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

export class ICloak__factory {
  static readonly abi = _abi;
  static createInterface(): ICloakInterface {
    return new utils.Interface(_abi) as ICloakInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ICloak {
    return new Contract(address, _abi, signerOrProvider) as ICloak;
  }
}
