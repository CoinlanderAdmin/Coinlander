/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IClans, IClansInterface } from "../IClans";

const _abi = [
  {
    inputs: [],
    name: "allMembers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "characterMembers",
    outputs: [
      {
        internalType: "address",
        name: "characterContract",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "itemContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemType",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "itemIds",
        type: "uint256[]",
      },
    ],
    name: "declaredItems",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isClan",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "returnURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IClans__factory {
  static readonly abi = _abi;
  static createInterface(): IClansInterface {
    return new utils.Interface(_abi) as IClansInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IClans {
    return new Contract(address, _abi, signerOrProvider) as IClans;
  }
}
